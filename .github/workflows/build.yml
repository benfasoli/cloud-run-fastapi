name: Build python service

on: [push, pull_request]

defaults:
  run:
    shell: bash

env:
  DOCKER_IMAGE: gcr.io/${{secrets.GCP_PROJECT_ID}}/${{secrets.PROJECT_NAME}}

jobs:
  test:
    name: Run Python tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip pytest
          [ -f requirements.txt ] && pip install -r app/requirements.txt
      - name: Test with pytest
        run: pytest

  deploy:
    name: Build and deploy
    runs-on: ubuntu-latest
    needs: test
    if: contains(['refs/heads/main', 'refs/heads/dev'], github.ref)
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Google Cloud SDK
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Authorize Docker push
        run: gcloud auth configure-docker

      - name: Build and push container
        run: |
          docker build -t ${{env.DOCKER_IMAGE}}:${{github.sha}} .
          docker push ${{env.DOCKER_IMAGE}}:${{github.sha}}

      - name: Deploy to Google Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v0.2.0
        with:
          service: ${{secrets.PROJECT_NAME}}
          image: ${{env.DOCKER_IMAGE}}:${{github.sha}}
          region: ${{env.GCP_REGION}}

      - name: Return deployment URL
        run: echo ${{ steps.deploy.outputs.url }}

  # prod-check:
  #   if: github.ref == 'refs/heads/main'
  #   runs-on: ubuntu-latest
  #   steps:
  #     - run: echo "Deploying to production server on branch $GITHUB_REF"
